// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: event.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Event {

  /// <summary>Holder for reflection information generated from event.proto</summary>
  public static partial class EventReflection {

    #region Descriptor
    /// <summary>File descriptor for event.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static EventReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CgtldmVudC5wcm90bxIFZXZlbnQaDGNvbW1vbi5wcm90bxoLb3JkZXIucHJv",
            "dG8iqgEKBUV2ZW50EiMKCWV2ZW50VHlwZRgBIAEoDjIQLmV2ZW50LkV2ZW50",
            "VHlwZRI6ChNjb2xvbnlfY3JlYXRlX2V2ZW50GAIgASgLMhsuZXZlbnQuQ29s",
            "b255QmFzaWNFdmVudERhdGFIABI1ChJvcmRlcl9jcmVhdGVfZXZlbnQYAyAB",
            "KAsyFy5ldmVudC5PcmRlckNyZWF0ZUV2ZW50SABCCQoHbWVzc2FnZSI5ChRD",
            "b2xvbnlCYXNpY0V2ZW50RGF0YRIMCgROYW1lGAEgASgJEhMKC0ZhY3Rpb25O",
            "YW1lGAIgASgJIoEBChBPcmRlckNyZWF0ZUV2ZW50EisKBmNvbG9ueRgBIAEo",
            "CzIbLmV2ZW50LkNvbG9ueUJhc2ljRXZlbnREYXRhEh4KBFNvbGQYBCADKAsy",
            "EC5vcmRlci5PcmRlckl0ZW0SIAoGQm91Z2h0GAUgAygLMhAub3JkZXIuT3Jk",
            "ZXJJdGVtIhUKE0NvbnRyYWN0Q3JlYXRlRXZlbnQqQgoJRXZlbnRUeXBlEhAK",
            "DENvbG9ueUNyZWF0ZRAAEg8KC09yZGVyQ3JlYXRlEAESEgoOQ29udHJhY3RD",
            "cmVhdGUQAmIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Common.CommonReflection.Descriptor, global::Order.OrderReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Event.EventType), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Event.Event), global::Event.Event.Parser, new[]{ "EventType", "ColonyCreateEvent", "OrderCreateEvent" }, new[]{ "Message" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Event.ColonyBasicEventData), global::Event.ColonyBasicEventData.Parser, new[]{ "Name", "FactionName" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Event.OrderCreateEvent), global::Event.OrderCreateEvent.Parser, new[]{ "Colony", "Sold", "Bought" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Event.ContractCreateEvent), global::Event.ContractCreateEvent.Parser, null, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum EventType {
    [pbr::OriginalName("ColonyCreate")] ColonyCreate = 0,
    [pbr::OriginalName("OrderCreate")] OrderCreate = 1,
    [pbr::OriginalName("ContractCreate")] ContractCreate = 2,
  }

  #endregion

  #region Messages
  public sealed partial class Event : pb::IMessage<Event> {
    private static readonly pb::MessageParser<Event> _parser = new pb::MessageParser<Event>(() => new Event());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Event> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Event.EventReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Event() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Event(Event other) : this() {
      eventType_ = other.eventType_;
      switch (other.MessageCase) {
        case MessageOneofCase.ColonyCreateEvent:
          ColonyCreateEvent = other.ColonyCreateEvent.Clone();
          break;
        case MessageOneofCase.OrderCreateEvent:
          OrderCreateEvent = other.OrderCreateEvent.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Event Clone() {
      return new Event(this);
    }

    /// <summary>Field number for the "eventType" field.</summary>
    public const int EventTypeFieldNumber = 1;
    private global::Event.EventType eventType_ = global::Event.EventType.ColonyCreate;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Event.EventType EventType {
      get { return eventType_; }
      set {
        eventType_ = value;
      }
    }

    /// <summary>Field number for the "colony_create_event" field.</summary>
    public const int ColonyCreateEventFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Event.ColonyBasicEventData ColonyCreateEvent {
      get { return messageCase_ == MessageOneofCase.ColonyCreateEvent ? (global::Event.ColonyBasicEventData) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.ColonyCreateEvent;
      }
    }

    /// <summary>Field number for the "order_create_event" field.</summary>
    public const int OrderCreateEventFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Event.OrderCreateEvent OrderCreateEvent {
      get { return messageCase_ == MessageOneofCase.OrderCreateEvent ? (global::Event.OrderCreateEvent) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.OrderCreateEvent;
      }
    }

    private object message_;
    /// <summary>Enum of possible cases for the "message" oneof.</summary>
    public enum MessageOneofCase {
      None = 0,
      ColonyCreateEvent = 2,
      OrderCreateEvent = 3,
    }
    private MessageOneofCase messageCase_ = MessageOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MessageOneofCase MessageCase {
      get { return messageCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMessage() {
      messageCase_ = MessageOneofCase.None;
      message_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Event);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Event other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (EventType != other.EventType) return false;
      if (!object.Equals(ColonyCreateEvent, other.ColonyCreateEvent)) return false;
      if (!object.Equals(OrderCreateEvent, other.OrderCreateEvent)) return false;
      if (MessageCase != other.MessageCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (EventType != global::Event.EventType.ColonyCreate) hash ^= EventType.GetHashCode();
      if (messageCase_ == MessageOneofCase.ColonyCreateEvent) hash ^= ColonyCreateEvent.GetHashCode();
      if (messageCase_ == MessageOneofCase.OrderCreateEvent) hash ^= OrderCreateEvent.GetHashCode();
      hash ^= (int) messageCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (EventType != global::Event.EventType.ColonyCreate) {
        output.WriteRawTag(8);
        output.WriteEnum((int) EventType);
      }
      if (messageCase_ == MessageOneofCase.ColonyCreateEvent) {
        output.WriteRawTag(18);
        output.WriteMessage(ColonyCreateEvent);
      }
      if (messageCase_ == MessageOneofCase.OrderCreateEvent) {
        output.WriteRawTag(26);
        output.WriteMessage(OrderCreateEvent);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (EventType != global::Event.EventType.ColonyCreate) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) EventType);
      }
      if (messageCase_ == MessageOneofCase.ColonyCreateEvent) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ColonyCreateEvent);
      }
      if (messageCase_ == MessageOneofCase.OrderCreateEvent) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(OrderCreateEvent);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Event other) {
      if (other == null) {
        return;
      }
      if (other.EventType != global::Event.EventType.ColonyCreate) {
        EventType = other.EventType;
      }
      switch (other.MessageCase) {
        case MessageOneofCase.ColonyCreateEvent:
          if (ColonyCreateEvent == null) {
            ColonyCreateEvent = new global::Event.ColonyBasicEventData();
          }
          ColonyCreateEvent.MergeFrom(other.ColonyCreateEvent);
          break;
        case MessageOneofCase.OrderCreateEvent:
          if (OrderCreateEvent == null) {
            OrderCreateEvent = new global::Event.OrderCreateEvent();
          }
          OrderCreateEvent.MergeFrom(other.OrderCreateEvent);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            EventType = (global::Event.EventType) input.ReadEnum();
            break;
          }
          case 18: {
            global::Event.ColonyBasicEventData subBuilder = new global::Event.ColonyBasicEventData();
            if (messageCase_ == MessageOneofCase.ColonyCreateEvent) {
              subBuilder.MergeFrom(ColonyCreateEvent);
            }
            input.ReadMessage(subBuilder);
            ColonyCreateEvent = subBuilder;
            break;
          }
          case 26: {
            global::Event.OrderCreateEvent subBuilder = new global::Event.OrderCreateEvent();
            if (messageCase_ == MessageOneofCase.OrderCreateEvent) {
              subBuilder.MergeFrom(OrderCreateEvent);
            }
            input.ReadMessage(subBuilder);
            OrderCreateEvent = subBuilder;
            break;
          }
        }
      }
    }

  }

  public sealed partial class ColonyBasicEventData : pb::IMessage<ColonyBasicEventData> {
    private static readonly pb::MessageParser<ColonyBasicEventData> _parser = new pb::MessageParser<ColonyBasicEventData>(() => new ColonyBasicEventData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ColonyBasicEventData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Event.EventReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ColonyBasicEventData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ColonyBasicEventData(ColonyBasicEventData other) : this() {
      name_ = other.name_;
      factionName_ = other.factionName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ColonyBasicEventData Clone() {
      return new ColonyBasicEventData(this);
    }

    /// <summary>Field number for the "Name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "FactionName" field.</summary>
    public const int FactionNameFieldNumber = 2;
    private string factionName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FactionName {
      get { return factionName_; }
      set {
        factionName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ColonyBasicEventData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ColonyBasicEventData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (FactionName != other.FactionName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (FactionName.Length != 0) hash ^= FactionName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (FactionName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(FactionName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (FactionName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FactionName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ColonyBasicEventData other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.FactionName.Length != 0) {
        FactionName = other.FactionName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            FactionName = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class OrderCreateEvent : pb::IMessage<OrderCreateEvent> {
    private static readonly pb::MessageParser<OrderCreateEvent> _parser = new pb::MessageParser<OrderCreateEvent>(() => new OrderCreateEvent());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OrderCreateEvent> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Event.EventReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OrderCreateEvent() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OrderCreateEvent(OrderCreateEvent other) : this() {
      colony_ = other.colony_ != null ? other.colony_.Clone() : null;
      sold_ = other.sold_.Clone();
      bought_ = other.bought_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OrderCreateEvent Clone() {
      return new OrderCreateEvent(this);
    }

    /// <summary>Field number for the "colony" field.</summary>
    public const int ColonyFieldNumber = 1;
    private global::Event.ColonyBasicEventData colony_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Event.ColonyBasicEventData Colony {
      get { return colony_; }
      set {
        colony_ = value;
      }
    }

    /// <summary>Field number for the "Sold" field.</summary>
    public const int SoldFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Order.OrderItem> _repeated_sold_codec
        = pb::FieldCodec.ForMessage(34, global::Order.OrderItem.Parser);
    private readonly pbc::RepeatedField<global::Order.OrderItem> sold_ = new pbc::RepeatedField<global::Order.OrderItem>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Order.OrderItem> Sold {
      get { return sold_; }
    }

    /// <summary>Field number for the "Bought" field.</summary>
    public const int BoughtFieldNumber = 5;
    private static readonly pb::FieldCodec<global::Order.OrderItem> _repeated_bought_codec
        = pb::FieldCodec.ForMessage(42, global::Order.OrderItem.Parser);
    private readonly pbc::RepeatedField<global::Order.OrderItem> bought_ = new pbc::RepeatedField<global::Order.OrderItem>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Order.OrderItem> Bought {
      get { return bought_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OrderCreateEvent);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OrderCreateEvent other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Colony, other.Colony)) return false;
      if(!sold_.Equals(other.sold_)) return false;
      if(!bought_.Equals(other.bought_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (colony_ != null) hash ^= Colony.GetHashCode();
      hash ^= sold_.GetHashCode();
      hash ^= bought_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (colony_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Colony);
      }
      sold_.WriteTo(output, _repeated_sold_codec);
      bought_.WriteTo(output, _repeated_bought_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (colony_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Colony);
      }
      size += sold_.CalculateSize(_repeated_sold_codec);
      size += bought_.CalculateSize(_repeated_bought_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OrderCreateEvent other) {
      if (other == null) {
        return;
      }
      if (other.colony_ != null) {
        if (colony_ == null) {
          Colony = new global::Event.ColonyBasicEventData();
        }
        Colony.MergeFrom(other.Colony);
      }
      sold_.Add(other.sold_);
      bought_.Add(other.bought_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (colony_ == null) {
              Colony = new global::Event.ColonyBasicEventData();
            }
            input.ReadMessage(Colony);
            break;
          }
          case 34: {
            sold_.AddEntriesFrom(input, _repeated_sold_codec);
            break;
          }
          case 42: {
            bought_.AddEntriesFrom(input, _repeated_bought_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ContractCreateEvent : pb::IMessage<ContractCreateEvent> {
    private static readonly pb::MessageParser<ContractCreateEvent> _parser = new pb::MessageParser<ContractCreateEvent>(() => new ContractCreateEvent());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ContractCreateEvent> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Event.EventReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContractCreateEvent() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContractCreateEvent(ContractCreateEvent other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContractCreateEvent Clone() {
      return new ContractCreateEvent(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ContractCreateEvent);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ContractCreateEvent other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ContractCreateEvent other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
